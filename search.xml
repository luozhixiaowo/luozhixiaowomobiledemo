<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022-39286938c39e/"/>
      <url>/2022-39286938c39e/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker安装与配置nginx详细过程</title>
      <link href="/2021-6cb2454df473/"/>
      <url>/2021-6cb2454df473/</url>
      
        <content type="html"><![CDATA[<!--markdown-->**注：大鸟飞过，此方式只用于快速搭建使用**<ul><li>第一步 pull nginx</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull nginx </span><br></pre></td></tr></table></figure><ul><li><p>第二步 启动nginx</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name nginx -p 80:80 -d </span><br></pre></td></tr></table></figure></li><li><p>第三步 查看成果<br>1）命令查看是否启动，命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>2）网页访问，浏览器输入IP地址回车，就可以看到 “Welcome to nginx!”</p></li></ul><hr><p><strong>附加项</strong>：<br>原因：虽然咱们能正常启动nginx，但配置得在容器中进行，这样的话太麻烦了，所以把配置文件给映射出来，方便配置与管理</p><ul><li>第一步 本地创建管理目录</li></ul><p>命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/nginx</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/nginx/www</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/nginx/conf</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/nginx/logs </span><br></pre></td></tr></table></figure><ul><li>第二步 将容器中的相应文件copy到刚创建的管理目录中<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> 67e:/etc/nginx/nginx.conf /data/nginx/</span><br><span class="line">docker <span class="built_in">cp</span> 67e:/etc/nginx/conf.d /data/nginx/conf/</span><br><span class="line">docker <span class="built_in">cp</span> 67e:/usr/share/nginx/html/ /data/nginx/www/</span><br><span class="line">docker <span class="built_in">cp</span> 67e:/var/log/nginx/ /data/nginx/logs/</span><br><span class="line">---</span><br><span class="line">注：docker <span class="built_in">cp</span> 67e 中的 <span class="string">&quot;67e&quot;</span> 为容器ID前缀，只要唯一就好了 </span><br><span class="line"></span><br><span class="line">* 第三步 停止并移除容器</span><br><span class="line"></span><br><span class="line">停止容器：</span><br><span class="line">```bash</span><br><span class="line">docker stop 67e</span><br></pre></td></tr></table></figure>移除容器：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> 67e </span><br></pre></td></tr></table></figure></li><li>第四步 再次启动容器并作目录挂载(也相当于共享)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name nginx -p 80:80 </span><br><span class="line">-v /data/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br><span class="line">-v /data/nginx/www/:/usr/share/nginx/html/</span><br><span class="line">-v /data/nginx/logs/:/var/log/nginx/</span><br><span class="line">-v /data/nginx/conf/:/etc/nginx/conf.d</span><br><span class="line">--privileged=<span class="literal">true</span> -d nginx</span><br></pre></td></tr></table></figure>注：为了好看所以做了换行，执行的时候还是需要改成一行，每行一个空格隔开就可以了<br>部署就完成了！！！<br>彩蛋（配置相关）：</li><li>1、在location 中 echo “hello Nginx！” 访问可以直接输出文字</li></ul><p>例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;hello Nginx！&quot;</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ul><li>2、location匹配规则：</li></ul><p>1）最低级别匹配规则：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;hello Nginx！&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2）最高级别匹配规则：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location /user &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;hello user.hmtl&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3）其它级别匹配规则：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ^~ /user &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;hello user.hmtl&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">location ~^ /user &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;hello user.hmtl&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">location ~ ^/[a-z] &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;hello user.hmtl&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">location ~ ^/\a &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;hello user.hmtl&quot;</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ul><li><p>3、反向代理细节：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location /user &#123;</span><br><span class="line">    proxy_pass http:https://ip;</span><br><span class="line">&#125;</span><br><span class="line">location /order/ &#123;</span><br><span class="line">    proxy_pass http:https://ip/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问结果：<br>http:<a href="https://ip/user/xx">https://ip/user/xx</a>…<br>http:<a href="https://ip/xx">https://ip/xx</a>… </p></li><li><p>4、负载均衡配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">upstream order &#123;</span><br><span class="line">    server 192.168.5.18:8080 weight=1;</span><br><span class="line">    server 192.168.5.18:8081 weight=1;</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    location /order/ &#123;</span><br><span class="line">        proxy_pass http:https://order/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：weight&#x3D;1，配置的为权重，值越高权重越高</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
